services:
  rabbitmq:
    image: rabbitmq:3-management # Using a version with management plugin
    container_name: rabbitmq
    ports:
      - "5672:5672" # Standard AMQP port for client connections
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: on-failure
    networks:
      - backend

  server:
    build: ./server
    container_name: chat-server
    ports:
      - "8080:8080"
    environment:
      JWT_SECRET: mysecret
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      DATABASE_URL: postgres://chatuser:chatpass@postgres:5432/chatdb?sslmode=disable
    depends_on:
      - rabbitmq
      - postgres
    restart: on-failure
    networks:
      - backend

  client:
    build: ./client
    container_name: chat-client
    ports:
      - "3000:80"
    depends_on:
      - server
    restart: on-failure
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: chat-postgres
    environment:
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
      POSTGRES_DB: chatdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - .server/migrations/001_init.sql:/docker-entrypoint-initdb.d/001_init.sql
    restart: on-failure
    networks:
      - backend

volumes:
  pgdata:
  rabbitmq_data:

networks:
  backend:  
  frontend:  